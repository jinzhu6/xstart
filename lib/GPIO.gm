global PIN_MAP = Map();
global PIN_DIRECTION = Map();

global PIN_NOCHANGE = 0;
global PIN_FALLING = 1;
global PIN_RAISING = 2;

global PinToGPIO = function(pin) {
	//if(pin == 0) { return 116; }
	//if(pin == 1) { return 112; }
	if(pin == 2) { return 20; }
	if(pin == 3) { return 16; }
	if(pin == 4) { return 17; }
	if(pin == 5) { return 18; }
	if(pin == 6) { return 41; }
	if(pin == 7) { return 42; }
	if(pin == 8) { return 21; }
	if(pin == 9) { return 19; }
	if(pin == 10) { return 1; }
	if(pin == 11) { return 9; }
	if(pin == 12) { return 3; }
	if(pin == 13) { return 40; }
	if(pin == 14) { return 150; }
	if(pin == 15) { return 162; }
	if(pin == 16) { return 160; }
	if(pin == 17) { return 161; }
	if(pin == 18) { return 158; }
	if(pin == 19) { return 159; }
	if(pin == 20) { return 92; }
	if(pin == 21) { return 85; }
	if(pin == 22) { return 123; }
	if(pin == 23) { return 124; }
	if(pin == 24) { return 125; }
	if(pin == 25) { return 126; }
	if(pin == 26) { return 127; }
	if(pin == 27) { return 133; }
	if(pin == 28) { return 134; }
	if(pin == 29) { return 135; }
	if(pin == 30) { return 136; }
	if(pin == 31) { return 137; }
	if(pin == 32) { return 138; }
	if(pin == 33) { return 139; }
	if(pin == 34) { return 140; }
	if(pin == 35) { return 141; }
	if(pin == 36) { return 142; }
	if(pin == 37) { return 143; }
	if(pin == 38) { return 54; }
	if(pin == 39) { return 205; }
	if(pin == 40) { return 32; }
	if(pin == 41) { return 35; }
	if(pin == 42) { return 34; }
	if(pin == 43) { return 33; }
	if(pin == 44) { return 101; }
	if(pin == 45) { return 144; }
	if(pin == 46) { return 145; }
	if(pin == 47) { return 89; }
	if(pin == 48) { return 105; }
	if(pin == 49) { return 104; }
	if(pin == 50) { return 57; }
	if(pin == 51) { return 56; }
	if(pin == 52) { return 55; }
	if(pin == 53) { return 88; }
	error("NO GPIO FOR PIN '"+pin+"'!");
	return 0;
};

global SetPinDirection = function(pin, dir) {
	// USE "in" or "out" for dir
	// create entry in map - if it does not exist
	if(PIN_DIRECTION.get("" + pin) == null) {
		PIN_DIRECTION.set("" + pin, Object(""+dir));
		log("Setting pin "+pin+" to "+dir);
		system("echo "+dir+" > /sys/class/gpio/gpio"+PinToGPIO(pin)+"/direction");
		return;
	}
	else {
		// get previous value
		local prev = PIN_DIRECTION.get("" + pin).id;
		if(prev != dir) {
			log("Setting pin "+pin+" to "+dir);
			system("echo "+dir+" > /sys/class/gpio/gpio"+PinToGPIO(pin)+"/direction");
			// remember new state
			PIN_DIRECTION.get("" + pin).id = "" + dir;
		}
		return;
	}
	return;
};

global SetPin = function(pin, state) {
	if(state == true) { state = "1"; }
	else if(state == false) { state = "0"; }
	// do not set when it already has the state
	//if(GetPin(pin) == state) { return; }

	// get gpio
	local gpio = PinToGPIO(pin);

	// set pin direction
	//system("echo out > /sys/class/gpio/gpio"+gpio+"/direction");
	SetPinDirection(pin, "out");

	// set value
	state = state;
	system("echo "+state+" > /sys/class/gpio/gpio"+gpio+"/value");
};

global GetPin = function(pin) {
	// get gpio
	local gpio = PinToGPIO(pin);

	// set pin direction
	//system("echo in > /sys/class/gpio/gpio"+gpio+"/direction");
	SetPinDirection(pin, "in");

	// read current value
	return ascii(system("cat /sys/class/gpio/gpio"+gpio+"/value")[0]) == "1";
};

global CheckPinChange = function(pin) {
	// create entry in map - if it does not exist
	if(PIN_MAP.get("" + pin) == null) {
		PIN_MAP.set("" + pin, Object("0"));
	}

	// get previous value
	local prev = PIN_MAP.get("" + pin).id;

	// read current value
	local value = GetPin(pin);

	// remember new state
	PIN_MAP.get("" + pin).id = "" + value;

	// return change
	if(value == prev) { return PIN_NOCHANGE; }
	if(prev == "0")   { return PIN_RAISING; }
	return PIN_FALLING;
};
