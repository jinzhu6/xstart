
global strlen = function(s) { return s.length(); };

global substr = function(s, start, end) {
    local len = s.length().int();
    if(end < 0) { end = len + end + 1; }
    if(start < 0) { start = len + start + 1; }
    if(end > len) { end = len; }
    if(start > len-1) { start = len-1; }
    if(start > end) { warning("substr: start is behind end."); return ""; }
    local str = "";
    for(i=start; i<end; i+=1) { str += ascii(s.getAt(i)); }
    return str;
};

global trim = function(s) {
	return s.trimLeft().trimRight();
};

global split = function(s, d, dotrim) {
	local o = Array();
	local buffer = "";
	for(i=0; i<s.length(); i+=1) {
		if(substr(s,i,i+d.length()) == d) {
			if(dotrim) { buffer = trim(buffer); }
            o.add(buffer);
			buffer = "";
            i += d.length() - 1;
		}
		else {
			buffer += ascii(s[i]);
		}
	}
	if(dotrim) { buffer = trim(buffer); }
	if(buffer.length() > 0) { o.add(buffer); }
	return o;
};

global findstr = function(s, d) {
	for(i=0; i<s.length(); i+=1) {
		if(substr(s,i,i+d.length()) == d) {
            return i;
        }
    }
    return -1;
};
